GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер. $ git clone https://github.com/AllaOrlovaQA/JSON.git
 6. Внутри локального JSON создать файл “new.json”. CD JSON $ touch new.json
 7. Добавить файл под гит. $ git add .
 8. Закоммитить файл. $ git commit -m "add json file"
 9. Отправить файл на внешний GitHub репозиторий.$ git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. vim new.json
 11. Отправить изменения на внешний репозиторий.$ git add .$ git commit -m "redactor json"  $ git push
 12. Создать файл preferences.json  $ touch preferenses.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON $ touch skills.json
 15. Отправить сразу 2 файла на внешний репозиторий.$ git add . $ git commit -m "two json files with skills and preferenses"  $ git push
 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON git fetch  git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.$ git clone https://github.com/AllaOrlovaQA/XML.git 
 23. Внутри локального XML создать файл “new.xml”. cd XML $ touch new.xml
 24. Добавить файл под гит.$ git add .
 25. Закоммитить файл.$ git commit -m "Create xml file"
 26. Отправить файл на внешний GitHub репозиторий.$ git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.$ git commit -am "Redactor xml file" $ git push
 29. Создать файл preferences.xml  $ touch preferenses.xml 
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.$ git add preferenses.xml
 31. Создать файл sklls.xml $ touch skills.xml  Dобавить информацию о скиллах которые будут изучены на курсе в формате XML  $ git add skills.xml
 32. Сделать коммит в одну строку.  $ git commit -am "two xml files with skills and preferenses"
 33. Отправить сразу 2 файла на внешний репозиторий. $ git push
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML git fetch  git pull

TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.$ git clone https://github.com/AllaOrlovaQA/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.cd TXT $ touch new.txt
 4. Добавить файл под гит. $ git add .
 5. Закоммитить файл. $ git commit -m "Create txt file"
 6. Отправить файл на внешний GitHub репозиторий. $ git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 8. Отправить изменения на внешний репозиторий.$ git commit -am "Create txt file"  $ git push
 9. Создать файл preferences.txt $ touch preferenses.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. $ git add preferences.txt
 11. Создать файл sklls.txt  $ touch skills.txt  добавить информацию о скиллах которые будут изучены на курсе в формате TXT  $ git add skills.txt
 12. Сделать коммит в одну строку.  $ git commit -am "two txt files with skills and preferenses"
 13. Отправить сразу 2 файла на внешний репозиторий. $ git push
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT git fetch  git pull